#!/bin/bash
# https://www.youtube.com/watch?v=hwrnmQumtPw
 
# chmod 755 if-input
 #19:25 169

	
	# You can use read to receive input which is stored in name
	# The p option says that we want to prompt with a string
  	read -p "What is your name? " name
  	echo "Hello $name"
  
  	read -p "How old are you? " age
  	 
  	# You place your condition with in []
  	# Include a space after [ and before ]
  	# Integer Comparisons: eq, ne, le, lt, ge, gt
  	if [ $age -ge 16 ]
  	then
  		echo "You can drive"
  	
  	# Check another condition
  	elif [ $age -eq 15 ]
  	then
  		echo "You can drive next year"
  		
  	# Executed by default
 	else
 	  echo "You can't drive"
 	  
 	# Closes the if statement
 	fi

#  Extended integer test
  	read -p "Enter a number : " num
 	
 	if ((num == 10)); then
 		echo "Your number equals 10"
 	fi
 	
 	if ((num > 10)); then
 		echo "It is greater then 10"
 	else
 		echo "It is less then 10"
 	fi
 	
 	if (( ((num % 2)) == 0 )); then
 		echo " It is even"
 	fi

 	 	# You can use logical operators like &&, || and !
 	if (( ((num > 0)) && ((num < 11)) )); then
 		echo "$num is between 1 and 10"
 	fi
 	
 	# && and || can be used as control structures


   # Read multiple values
  #!/bin/bash
  
  read -p "Enter 2 Numbers to Sum : " num1 num2
  
  sum=$((num1+num2))
  
  echo "$num1 + $num2 = $sum"
  
  # Hide the input with the s code
  read -sp "Enter the Secret Code" secret
  
  if [ "$secret" == "password" ]; then
    echo "Enter"
  else
    echo "Wrong Password"
  fi
# 34:12  343
# $IFS is an  Internal Variables
# Internal Field Separator
# determines how  Bash recognizes fields 